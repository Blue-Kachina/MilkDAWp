name: CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    name: Build and Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up CMake
        uses: lukka/get-cmake@v3.28.3

      - name: Bootstrap dependencies (POSIX)
        if: runner.os != 'Windows'
        run: |
          chmod +x scripts/bootstrap.sh
          ./scripts/bootstrap.sh

      - name: Bootstrap dependencies (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          scripts\bootstrap.bat

      - name: Configure (tests only)
        run: |
          cmake -S . -B build-ci -G "Ninja" -DBUILD_TESTING=ON -DMILKDAWP_BUILD_PLUGIN=OFF

      - name: Build tests
        run: cmake --build build-ci --config RelWithDebInfo --parallel

      - name: Run tests
        run: ctest --test-dir build-ci -C RelWithDebInfo --output-on-failure

  # Optional: package plugin on Windows to catch regressions (does not run tests)
  windows-plugin-build:
    name: Windows Plugin Build
    runs-on: windows-latest
    needs: build-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up CMake
        uses: lukka/get-cmake@v3.28.3

      - name: Bootstrap
        shell: cmd
        run: scripts\bootstrap.bat

      - name: Configure (plugin, dev-win preset)
        run: cmake --preset dev-win

      - name: Build VST3 (Release via preset)
        run: cmake --build --preset dev-win-Release --target MilkDAWp_VST3 --parallel

      - name: Verify runtime layout (projectM DLL next to VST3)
        shell: pwsh
        run: |
          ./scripts/ci/check_runtime_win.ps1 -BuildDir "build-win" -Config "Release"

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-vst3-release
          path: |
            build-win/MilkDAWp_artefacts/Release/VST3/**/*.vst3
            build-win/MilkDAWp_artefacts/Release/VST3/**/*.dll
          if-no-files-found: warn
